{"version":3,"sources":["webpack:///./src/app/charts/components/bar-chart/bar-chart.component.html","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.html","webpack:///./src/app/charts/components/line-chart/line-chart.component.html","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.html","webpack:///./src/app/charts/containers/charts/charts.component.html","webpack:///./src/app/charts/charts-routing.module.ts","webpack:///./src/app/charts/charts.module.ts","webpack:///./src/app/charts/components/bar-chart/bar-chart.component.scss","webpack:///./src/app/charts/components/bar-chart/bar-chart.component.ts","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.scss","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.ts","webpack:///./src/app/charts/components/line-chart/line-chart.component.scss","webpack:///./src/app/charts/components/line-chart/line-chart.component.ts","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.scss","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.ts","webpack:///./src/app/charts/containers/charts/charts.component.scss","webpack:///./src/app/charts/containers/charts/charts.component.ts","webpack:///./src/app/charts/services/charts.service.ts","webpack:///./src/app/charts/store/charts.actions.ts","webpack:///./src/app/charts/store/charts.effects.ts","webpack:///./src/app/charts/store/charts.reducer.ts","webpack:///./src/app/charts/store/charts.selectors.ts","webpack:///./src/app/charts/store/charts.state.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["module.exports = \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\n    [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","module.exports = \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\n    [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","module.exports = \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" height=\\\"500px\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","module.exports = \"<div style=\\\"display: block\\\">\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\n  </canvas>\\n</div>\\n\"","module.exports = \"<div class=\\\"white px-4 section-header\\\">\\n  <h3>Charts</h3>\\n  <p class=\\\"grey-text pt-3\\\">Visualisation of data downloaded from an external API</p>\\n</div>\\n\\n<div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 300px\\\">\\n  <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!(isLoading$ | async)\\\" class=\\\"charts-container p-5\\\">\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <div class=\\\"pl-4\\\">\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('USD')\\\">USD</button>\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('PLN')\\\">PLN</button>\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('GBP')\\\">GBP</button>\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('JPY')\\\">JPY</button>\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('RUB')\\\">RUB</button>\\n          </div>\\n          <app-line-chart [dataset]=\\\"dataset\\\" [labels]=\\\"labels\\\"></app-line-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\n        <thead class=\\\"primary-color text-white\\\">\\n          <tr>\\n            <th>Value</th>\\n            <th>Label</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr mdbTableCol *ngFor=\\\"let value of barChartDataset[0].data; let i = index\\\">\\n            <th scope=\\\"row\\\">{{ value }}</th>\\n            <td>{{ barChartLabels[i] }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-pie-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-pie-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-bar-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-bar-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n\\n    <div class=\\\"col-md-6 mb-3\\\">\\n      <mdb-card>\\n        <mdb-card-body>\\n          <app-doughnut-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-doughnut-chart>\\n        </mdb-card-body>\\n      </mdb-card>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChartsComponent } from './containers/charts/charts.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ChartsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ChartsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule, CardsModule, ButtonsModule, TableModule } from 'angular-bootstrap-md';\nimport { ChartsComponent } from './containers/charts/charts.component';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\nimport { ChartsRoutingModule } from './charts-routing.module';\n\nimport * as fromCharts from './store/charts.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ChartsEffects } from './store/charts.effects';\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\nimport { DoughnutChartComponent } from './components/doughnut-chart/doughnut-chart.component';\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardsModule,\n    ChartsModule,\n    ButtonsModule,\n    TableModule,\n    ChartsRoutingModule,\n    StoreModule.forFeature('charts', fromCharts.chartsReducer),\n    EffectsModule.forFeature([ChartsEffects])\n  ],\n  declarations: [ChartsComponent, LineChartComponent, BarChartComponent, DoughnutChartComponent, PieChartComponent],\n  exports: [ChartsComponent, LineChartComponent]\n})\nexport class ChartsDataModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'bar';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DoughnutChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'doughnut';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'line';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(255, 152, 0, .5)',\n      borderColor: 'rgb(230,81,0)',\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n  @Input() dataset: any;\n  @Input() labels: any;\n\n  public chartType = 'pie';\n\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\n      borderWidth: 2,\n    }\n  ];\n\n  public chartOptions: any = {\n    responsive: true\n  };\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb250YWluZXJzL2NoYXJ0cy9jaGFydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../reducers/index';\n\nimport * as fromCharts from './../../store/charts.actions';\nimport { Subscription, Observable } from 'rxjs';\nimport { getLineChartData, getBarChartData, getIsLoading } from '../../store/charts.selectors';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent implements OnInit, OnDestroy {\n  isLoading$: Observable<boolean>;\n\n  lineChartSub: Subscription;\n  barChartSub: Subscription;\n\n  dataset: any[] = [{ data: [], label: ''}];\n  labels: any[] = [];\n\n  barChartDataset: any[] = [{ data: [], label: '' }];\n  barChartLabels: any[] = [];\n  barChartDate: string;\n  barChartBase: string;\n\n  currency: string;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.isLoading$ = this.store.select(getIsLoading);\n\n    this.lineChartSub = this.store.select(getLineChartData).subscribe( (data: any) => {\n      if (data.values) {\n        this.dataset = [{ data: data.values, label: `${data.currencyName} exchange rates (base EUR)`}];\n        this.labels = data.labels;\n      } else {\n        this.getExchangeRates('USD');\n      }\n    });\n\n    this.barChartSub = this.store.select(getBarChartData).subscribe( (data: any) => {\n      if (data.values) {\n        this.barChartDataset = [{ data: data.values, label: `${data.date} exchange rates (base ${data.base})`}];\n        this.barChartLabels = data.labels;\n      } else {\n        this.getLatestExchangeRates();\n      }\n    });\n\n\n  }\n\n  getExchangeRates(currency: string) {\n    this.store.dispatch(new fromCharts.LineChartQuery({ currency }));\n  }\n\n  getLatestExchangeRates() {\n    this.store.dispatch(new fromCharts.BarChartQuery());\n  }\n\n  ngOnDestroy() {\n    if (this.lineChartSub) {\n      this.lineChartSub.unsubscribe();\n    }\n\n    if (this.barChartSub) {\n      this.barChartSub.unsubscribe();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n\n  constructor(private http: HttpClient) { }\n  startDate = '2018-01-01';\n  endDate = '2018-01-31';\n  apiHistoryUrl = 'https://api.exchangeratesapi.io/history';\n  apiLatestUrl = 'https://api.exchangeratesapi.io/latest';\n\n  getExchangeRates(currency: string) {\n    return this.http.get(`${this.apiHistoryUrl}?start_at=${this.startDate}&end_at=${this.endDate}&symbols=${currency}`).pipe(\n      map( (res: any) => res['rates']),\n      switchMap( (val) => {\n        const dataset = [];\n        for (const rate in val) {\n          if (val.hasOwnProperty(rate)) {\n            dataset.push({date: rate, value: val[rate][currency] });\n          }\n        }\n        const sorted = dataset.sort((a, b) => {\n          if (a.date < b.date) {\n            return -1;\n          }\n          if (a.date > b.date) {\n            return 1;\n          }\n          return 0;\n        });\n        const currencyName = currency;\n        const labels = sorted.map( data => data.date);\n        const values = sorted.map( data => data.value);\n        return of({ currencyName, values, labels });\n      })\n    );\n  }\n\n  getLatestExchangeRates() {\n    return this.http.get(this.apiLatestUrl).pipe(\n      map( (data: any) => {\n        const date = data['date'];\n        const base = data['base'];\n        const rates = data['rates'];\n        const dataset = [];\n\n        for (const currency in rates) {\n          if (rates.hasOwnProperty(currency)) {\n            dataset.push({ currency: currency, value: rates[currency]});\n          }\n        }\n\n        const values = dataset.map( latestRates => latestRates.value).slice(0, 5);\n        const labels = dataset.map( latestRates => latestRates.currency).slice(0, 5);\n\n        return { date, base, values, labels };\n      })\n    );\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport enum ChartsActionTypes {\n  LINE_CHART_QUERY = '[Charts] Line chart query',\n  LINE_CHART_LOADED = '[Charts] Line chart loaded',\n\n  BAR_CHART_QUERY = '[Charts] Bar chart query',\n  BAR_CHART_LOADED = '[Charts] Bar chart loaded',\n\n  CHARTS_ERROR = '[Charts] Error'\n}\n\nexport class LineChartQuery implements Action {\n  readonly type = ChartsActionTypes.LINE_CHART_QUERY;\n\n  constructor(public payload: { currency: string }) {}\n}\n\nexport class BarChartQuery implements Action {\n  readonly type = ChartsActionTypes.BAR_CHART_QUERY;\n}\n\nexport class LineChartLoaded implements Action {\n  readonly type = ChartsActionTypes.LINE_CHART_LOADED;\n\n  constructor(public payload: { lineChartData: any }) {}\n}\n\nexport class BarChartLoaded implements Action {\n  readonly type = ChartsActionTypes.BAR_CHART_LOADED;\n\n  constructor(public payload: { barChartData: any }) {}\n}\n\nexport class ChartsError implements Action {\n  readonly type = ChartsActionTypes.CHARTS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ChartsActions =\n  | LineChartQuery\n  | LineChartLoaded\n  | BarChartQuery\n  | BarChartLoaded\n  | ChartsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ChartsService } from '../services/charts.service';\n\nimport * as fromCharts from './../store/charts.actions';\nimport { ChartsActionTypes } from './../store/charts.actions';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getLineChartData, getBarChartData } from './charts.selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\n  constructor(private actions$: Actions, private chartsService: ChartsService, private store: Store<AppState>) {}\n\n  @Effect()\n  lineChartQuery$ = this.actions$.pipe(\n    ofType<fromCharts.LineChartQuery>(ChartsActionTypes.LINE_CHART_QUERY),\n    map( (action: fromCharts.LineChartQuery) => action.payload),\n    withLatestFrom(this.store.pipe(select(getLineChartData))),\n    switchMap( ([payload, chartsData]) =>  {\n      if (!chartsData.values || (chartsData.currencyName && chartsData.currencyName !== payload.currency)) {\n          return this.chartsService.getExchangeRates(payload.currency)\n          .pipe(\n            map( (data: any) => new fromCharts.LineChartLoaded({ lineChartData: data })),\n            catchError( (error: any) => of(new fromCharts.ChartsError({ error }))\n          ));\n      }\n      return of(new fromCharts.LineChartLoaded({ lineChartData: chartsData }));\n    })\n  );\n\n  @Effect()\n  barChartQuery$ = this.actions$.pipe(\n    ofType<fromCharts.BarChartQuery>(ChartsActionTypes.BAR_CHART_QUERY),\n    withLatestFrom(this.store.pipe(select(getBarChartData))),\n    switchMap( ([, chartData]) => {\n      if (!chartData.values) {\n        return this.chartsService.getLatestExchangeRates()\n        .pipe(\n          map( (data: any) => new fromCharts.BarChartLoaded({ barChartData: data })),\n          catchError( (error: any) => of(new fromCharts.ChartsError( { error })))\n        );\n      }\n      return of(new fromCharts.BarChartLoaded({ barChartData: chartData }));\n    })\n  );\n}\n","import { chartsInitialState, ChartsState } from './charts.state';\nimport { ChartsActions, ChartsActionTypes } from './charts.actions';\n\n\nexport function chartsReducer(state = chartsInitialState, action: ChartsActions): ChartsState {\n  switch (action.type) {\n\n    case ChartsActionTypes.LINE_CHART_QUERY: {\n      return Object.assign({}, state, {\n        lineChartLoading: true,\n      });\n    }\n\n    case ChartsActionTypes.BAR_CHART_QUERY: {\n      return Object.assign({}, state, {\n        barChartLoading: true\n      });\n    }\n\n    case ChartsActionTypes.LINE_CHART_LOADED: {\n      return Object.assign({}, state, {\n        lineChartData: action.payload.lineChartData,\n        lineChartLoading: false,\n      });\n    }\n\n    case ChartsActionTypes.BAR_CHART_LOADED: {\n      return Object.assign({}, state, {\n        barChartData: action.payload.barChartData,\n        barChartLoading: false,\n      });\n    }\n\n    case ChartsActionTypes.CHARTS_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { ChartsState } from './charts.state';\n\nexport const getChartsState = createFeatureSelector<ChartsState>('charts');\n\n\nexport const getLineChartData = createSelector(\n  getChartsState,\n  charts => charts.lineChartData\n);\n\nexport const getBarChartData = createSelector(\n  getChartsState,\n  charts => charts.barChartData\n);\n\nexport const getIsLoading = createSelector(\n  getChartsState,\n  charts => charts.barChartLoading && charts.lineChartLoading\n);\n","export interface ChartsState {\n  lineChartData: any;\n  barChartData: any;\n  lineChartLoading: boolean;\n  barChartLoading: boolean;\n  error: any;\n}\n\nexport const chartsInitialState: ChartsState = {\n  lineChartData: {},\n  barChartData: {},\n  lineChartLoading: false,\n  barChartLoading: false,\n  error: null\n};\n"],"sourceRoot":""}