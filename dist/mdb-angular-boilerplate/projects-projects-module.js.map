{"version":3,"sources":["webpack:///./src/app/projects/containers/projects.component.html","webpack:///./src/app/projects/containers/projects.component.scss","webpack:///./src/app/projects/containers/projects.component.ts","webpack:///./src/app/projects/projects-routing.module.ts","webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/projects/store/projects.actions.ts","webpack:///./src/app/projects/store/projects.effects.ts","webpack:///./src/app/projects/store/projects.reducer.ts","webpack:///./src/app/projects/store/projects.selectors.ts","webpack:///./src/app/projects/store/projects.state.ts"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["module.exports = \"<p>Projetos</p>\\n\\n<!-- <div class=\\\"white px-4 section-header\\\">\\n  <h3>Projects list</h3>\\n  <p class=\\\"grey-text pt-3\\\">Add, edit and delete your projects</p>\\n</div>\\n\\n<div class=\\\"container-fluid pb-5\\\">\\n  <div class=\\\"py-5\\\">\\n      <button mdbBtn color=\\\"primary\\\" class=\\\"ml-3\\\" (click)=\\\"openAddProjectModal()\\\">Add new project</button>\\n      <app-projects-list [projects]=\\\"projects$ | async\\\" (projectDeleted)=\\\"onProjectDelete($event)\\\" (projectEdited)=\\\"onProjectEdit($event)\\\"></app-projects-list>\\n\\n    <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 200px\\\">\\n      <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RzL2NvbnRhaW5lcnMvcHJvamVjdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { Project } from '../models/project.model';\nimport { AppState } from '../../reducers/index';\nimport { Store, select } from '@ngrx/store';\nimport * as fromProjects from './../store/projects.actions';\nimport { Observable } from 'rxjs';\nimport { getProjects, getAllLoaded } from '../store/projects.selectors';\nimport { take, map } from 'rxjs/operators';\nimport { ConfirmModalComponent } from '../../shared/components/confirm-modal/confirm-modal.component';\nimport { ProjectModalComponent } from '../../shared/components/project-modal/project-modal.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects$: Observable<Project[] | null>;\n  isLoading$: Observable<boolean>;\n  modalRef: MDBModalRef;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  constructor(private store: Store<AppState>, private modalService: MDBModalService, private afAuth: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.isLoading$ = this.store.select(getAllLoaded);\n    this.projects$ = this.store.pipe(\n      select(getProjects),\n      map( (projects: Project[]) => {\n        if (this.user && !projects) {\n          this.store.dispatch(new fromProjects.ProjectsQuery());\n        }\n        return projects;\n      })\n    );\n  }\n\n  get user() {\n    return this.afAuth.auth.currentUser;\n  }\n\n  openAddProjectModal() {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Add new project';\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectAdded({ project: projectData }));\n    });\n  }\n\n  openEditProjectModal(project: Project) {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Edit project';\n    const projectCopy = {...project };\n    this.modalRef.content.project = projectCopy;\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectEdited({ project: projectData }));\n    });\n  }\n\n  openConfirmModal(project: Project) {\n    this.modalRef = this.modalService.show(ConfirmModalComponent, this.modalConfig);\n\n    this.modalRef.content.confirmation.pipe(take(1)).subscribe( (confirmation: boolean) => {\n      if (confirmation) {\n        this.store.dispatch(new fromProjects.ProjectDeleted({ project }));\n      }\n    });\n  }\n\n  onProjectDelete(project: Project) {\n    this.openConfirmModal(project);\n  }\n\n  onProjectEdit(project: Project) {\n    this.openEditProjectModal(project);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './containers/projects.component';\n\nconst routes: Routes = [\n  { path: '', component: ProjectsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsComponent } from './containers/projects.component';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonsModule, InputsModule, CardsModule, WavesModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromProjects from './store/projects.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProjectsEffects } from './store/projects.effects';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule,\n    SharedModule,\n    ProjectsRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    WavesModule,\n    IconsModule,\n    CardsModule,\n    StoreModule.forFeature('projects', fromProjects.projectsReducer),\n    EffectsModule.forFeature([ProjectsEffects])\n  ],\n  declarations: [ProjectsComponent],\n  exports: [ProjectsComponent],\n})\nexport class ProjectsModule { }\n","import { Action } from '@ngrx/store';\nimport { Project } from '../models/project.model';\n\nexport enum ProjectsActionTypes {\n  PROJECTS_QUERY = '[Projects] Projects query',\n  PROJECTS_LOADED = '[Projects] Projects loaded',\n\n  PROJECT_ADDED = '[Projects] Project added',\n\n  PROJECT_EDITED = '[Projects] Project edited',\n  PROJECT_DELETED = '[Projects] Project deleted',\n\n  PROJECTS_ERROR = '[Projects] Projects error'\n}\n\nexport class ProjectsQuery implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_QUERY;\n}\n\nexport class ProjectsLoaded implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_LOADED;\n\n  constructor(public payload: { projects: Project[] }) {}\n}\n\nexport class ProjectAdded implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_ADDED;\n\n  constructor(public payload: { project: Project}) {}\n}\n\nexport class ProjectEdited implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_EDITED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectDeleted implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_DELETED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectsError implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ProjectsActions =\n  | ProjectsQuery\n  | ProjectsLoaded\n  | ProjectAdded\n  | ProjectEdited\n  | ProjectDeleted\n  | ProjectsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ProjectsActionTypes } from './projects.actions';\nimport { Store, select } from '@ngrx/store';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Project } from '../models/project.model';\nimport { of } from 'rxjs';\nimport { ProjectsService } from '../services/projects.service';\n\nimport * as fromProjects from './../store/projects.actions';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\n@Injectable()\nexport class ProjectsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private projectsService: ProjectsService,\n    private store: Store<AppState>) {}\n\n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECTS_QUERY),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([, user]: any) => {\n      return this.projectsService.get(user.uid)\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const project: Project = res.payload.val();\n            return {\n              key: key || null,\n              title: project.title || null,\n              description: project.description || null,\n              photoUrl: project.photoUrl || null\n            };\n          });\n          return (new fromProjects.ProjectsLoaded({ projects: projectsData }));\n        }),\n        catchError(error => of(new fromProjects.ProjectsError({ error })))\n      );\n    }),\n  );\n\n  @Effect({ dispatch: false })\n  added$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_ADDED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.add(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  delete$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_DELETED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.delete(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  edit$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_EDITED),\n    map((action: fromProjects.ProjectEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.update(payload.project, user.uid)\n    )\n  );\n\n}\n","import { ProjectsActions, ProjectsActionTypes } from './projects.actions';\nimport { projectsInitialState, ProjectsState } from './projects.state';\n\n\nexport function projectsReducer(state = projectsInitialState, action: ProjectsActions): ProjectsState {\n  switch (action.type) {\n\n    case ProjectsActionTypes.PROJECTS_QUERY: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_LOADED: {\n      return Object.assign({}, state, {\n        projects: action.payload.projects,\n        loading: false,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_ERROR: {\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n// import { AppState } from '../../reducers/index';\nimport { ProjectsState } from './projects.state';\n\nexport const getProjectsState = createFeatureSelector<ProjectsState>('projects');\n\nexport const getProjects = createSelector(\n  getProjectsState,\n  projects => projects.projects\n);\n\nexport const getAllLoaded = createSelector(\n  getProjectsState,\n  projects => projects.loading\n);\n\nexport const getError = createSelector(\n  getProjectsState,\n  projects => projects.error\n);\n","import { Project } from '../models/project.model';\n\nexport interface ProjectsState {\n  projects: Project[] | null;\n  loading: boolean;\n  error: any;\n}\n\nexport const projectsInitialState: ProjectsState = {\n  projects: null,\n  loading: false,\n  error: null\n};\n"],"sourceRoot":""}