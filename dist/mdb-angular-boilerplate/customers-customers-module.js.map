{"version":3,"sources":["webpack:///./src/app/customers/containers/customers.component.html","webpack:///./src/app/customers/containers/customers.component.scss","webpack:///./src/app/customers/containers/customers.component.ts","webpack:///./src/app/customers/customers-routing.module.ts","webpack:///./src/app/customers/customers.module.ts","webpack:///./src/app/customers/store/customers.actions.ts","webpack:///./src/app/customers/store/customers.effects.ts","webpack:///./src/app/customers/store/customers.reducer.ts","webpack:///./src/app/customers/store/customers.selectors.ts","webpack:///./src/app/customers/store/customers.state.ts"],"names":[],"mappings":"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","file":"customers-customers-module.js","sourcesContent":["module.exports = \"<!-- <div class=\\\"white px-4 section-header\\\">\\n  <h3>Customers list</h3>\\n  <p class=\\\"grey-text pt-3\\\">Manage your customers list</p>\\n</div>\\n\\n<div class=\\\"container-fluid pt-5 pb-5\\\">\\n  <div class=\\\"pt-3 pb-5\\\">\\n    <button mdbBtn color=\\\"primary\\\" (click)=\\\"onAddCustomer()\\\">Add new customer</button>\\n\\n    <div *ngIf=\\\"customers\\\" class=\\\"mt-4 white\\\">\\n      <app-customers-list [customers]=\\\"customers\\\" (customerEdited)=\\\"onCustomerEdit($event)\\\" (customerDeleted)=\\\"onCustomerDelete($event)\\\"></app-customers-list>\\n    </div>\\n\\n    <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 200px\\\">\\n      <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jb250YWluZXJzL2N1c3RvbWVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\n\nimport * as fromCustomers from './../store/customers.actions';\nimport { Customer } from '../models/customer.model';\nimport { Subscription, Observable } from 'rxjs';\nimport { getCustomers, getIsLoading } from '../store/customers.selectors';\nimport { take, map } from 'rxjs/operators';\nimport { ConfirmModalComponent } from '../../shared/components/confirm-modal/confirm-modal.component';\nimport { CustomersModalComponent } from '../../shared/components/customers-modal/customers-modal.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit, OnDestroy {\n  isLoading$: Observable<boolean>;\n  customers: Customer[] | null;\n  modalRef: MDBModalRef;\n\n  customersSub: Subscription;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  lastCustomerIndex: number;\n\n  constructor(private modalService: MDBModalService, private store: Store<AppState>, private afAuth: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.isLoading$ = this.store.select(getIsLoading);\n\n    this.customersSub = this.store.select(getCustomers).pipe(\n      map( (customers: Customer[]) => {\n        if (this.user && !customers) {\n          this.store.dispatch(new fromCustomers.CustomersQuery());\n        }\n        return customers;\n      })\n    )\n    .subscribe( (customers: Customer[]) => {\n      if (customers && customers.length !== 0) {\n        const index: number = Number(customers[customers.length - 1].id);\n        this.lastCustomerIndex = index;\n      } else {\n        this.lastCustomerIndex = 0;\n      }\n\n      this.customers = customers;\n    });\n  }\n\n  get user() {\n    return this.afAuth.auth.currentUser;\n  }\n\n  ngOnDestroy() {\n    if (this.customersSub) {\n      this.customersSub.unsubscribe();\n    }\n  }\n\n  onAddCustomer() {\n    this.modalRef = this.modalService.show(CustomersModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Add new customer';\n    this.modalRef.content.customer.id = this.lastCustomerIndex + 1;\n\n    this.modalRef.content.customerData.pipe(take(1)).subscribe( (customerData: Customer) => {\n      this.store.dispatch(new fromCustomers.CustomersAdded({ customer: customerData }));\n    });\n  }\n\n  openEditCustomerModal(customer: Customer) {\n    this.modalRef = this.modalService.show(CustomersModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Edit customer';\n    const customerCopy = {\n      key: customer.key,\n      id: customer.id || null,\n      name: customer.name || null,\n      description: customer.description || null\n     };\n    this.modalRef.content.customer = customerCopy;\n\n    this.modalRef.content.customerData.pipe(take(1)).subscribe( (customerData: Customer) => {\n      this.store.dispatch(new fromCustomers.CustomersEdited({ customer: customerData }));\n    });\n  }\n\n  openConfirmModal(customer: Customer) {\n    this.modalRef = this.modalService.show(ConfirmModalComponent, this.modalConfig);\n\n    this.modalRef.content.confirmation.pipe(take(1)).subscribe( (confirmation: boolean) => {\n      if (confirmation) {\n        this.store.dispatch(new fromCustomers.CustomersDeleted({ customer }));\n      }\n    });\n  }\n\n  onCustomerEdit(customer: Customer) {\n    this.openEditCustomerModal(customer);\n  }\n\n  onCustomerDelete(customer: Customer) {\n    this.openConfirmModal(customer);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './containers/customers.component';\n\nconst routes: Routes = [\n  { path: '', component: CustomersComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CustomersRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomersComponent } from './containers/customers.component';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonsModule, InputsModule, TableModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromCustomers from './store/customers.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CustomersEffects } from './store/customers.effects';\nimport { CustomersRoutingModule } from './customers-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CustomersRoutingModule,\n    ModalModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    IconsModule,\n    TableModule,\n    StoreModule.forFeature('customers', fromCustomers.customersReducer),\n    EffectsModule.forFeature([CustomersEffects])\n  ],\n  declarations: [CustomersComponent],\n  exports: [CustomersComponent],\n})\nexport class CustomersModule { }\n","import { Action } from '@ngrx/store';\nimport { Customer } from '../models/customer.model';\n\nexport enum CustomersActionTypes {\n  CUSTOMERS_QUERY = '[Customers] Query',\n  CUSTOMERS_LOADED = '[Customers] Fetched',\n\n  CUSTOMERS_ADDED = '[Customers] Added',\n  CUSTOMERS_EDITED = '[Customers] Edited',\n  CUSTOMERS_DELETED = '[Customers] Deleted',\n\n  CUSTOMERS_ERROR = '[Customers] Error'\n}\n\nexport class CustomersQuery implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_QUERY;\n}\n\nexport class CustomersLoaded implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_LOADED;\n\n  constructor(public payload: { customers: Customer[] }) {}\n}\n\nexport class CustomersAdded implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_ADDED;\n\n  constructor(public payload: { customer: Customer }) {}\n}\n\nexport class CustomersEdited implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_EDITED;\n\n  constructor(public payload: { customer: Customer }) {}\n}\n\nexport class CustomersDeleted implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_DELETED;\n\n  constructor(public payload: { customer: Customer }) {}\n}\n\nexport class CustomersError implements Action {\n  readonly type = CustomersActionTypes.CUSTOMERS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type CustomersActions =\n  | CustomersQuery\n  | CustomersLoaded\n  | CustomersAdded\n  | CustomersEdited\n  | CustomersDeleted\n  | CustomersError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { CustomersService } from '../services/customers.service';\nimport { CustomersActionTypes } from './customers.actions';\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Customer } from '../models/customer.model';\n\nimport * as fromCustomers from './../store/customers.actions';\nimport { of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\n@Injectable()\nexport class CustomersEffects {\n\n  constructor(private actions$: Actions, private customersService: CustomersService, private store: Store<AppState>) {}\n\n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(CustomersActionTypes.CUSTOMERS_QUERY),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([, user]: any) => this.customersService.get(user.uid)\n      .pipe(\n        map((data: any) => {\n          const customersData: Customer[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const customer: Customer = res.payload.val();\n            return {\n              key: key,\n              id: customer.id,\n              name: customer.name,\n              description: customer.description\n            };\n          });\n          return (new fromCustomers.CustomersLoaded({ customers: customersData }));\n        }),\n        catchError(error => {\n          return of(new fromCustomers.CustomersError({ error }));\n        })\n      )\n    ),\n  );\n\n  @Effect({ dispatch: false })\n  added$ = this.actions$.pipe(\n    ofType(CustomersActionTypes.CUSTOMERS_ADDED),\n    map((action: fromCustomers.CustomersAdded) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.customersService.add(payload.customer, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  edit$ = this.actions$.pipe(\n    ofType(CustomersActionTypes.CUSTOMERS_EDITED),\n    map((action: fromCustomers.CustomersEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.customersService.update(payload.customer, user.uid)\n    .pipe(\n      catchError( error => {\n      return of(new fromCustomers.CustomersError({ error }));\n    }))\n    )\n  );\n\n  @Effect({ dispatch: false })\n  delete$ = this.actions$.pipe(\n    ofType(CustomersActionTypes.CUSTOMERS_DELETED),\n    map((action: fromCustomers.CustomersDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.customersService.delete(payload.customer, user.uid))\n  );\n}\n","import { customersInitialState, CustomersState } from './customers.state';\nimport { CustomersActions, CustomersActionTypes } from './customers.actions';\n\nexport function customersReducer(state = customersInitialState, action: CustomersActions): CustomersState {\n  switch (action.type) {\n\n    case CustomersActionTypes.CUSTOMERS_QUERY: {\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    }\n\n    case CustomersActionTypes.CUSTOMERS_LOADED: {\n      return Object.assign({}, state, {\n        customers: action.payload.customers,\n        isLoading: false,\n      });\n    }\n\n    case CustomersActionTypes.CUSTOMERS_ERROR: {\n      return Object.assign({}, state, {\n        isLoading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { CustomersState } from './customers.state';\n\nexport const getCustomersState = createFeatureSelector<CustomersState>('customers');\n\nexport const getCustomers = createSelector(\n  getCustomersState,\n  customers => customers.customers\n);\n\nexport const getIsLoading = createSelector(\n  getCustomersState,\n  customers => customers.isLoading\n);\n\nexport const getError = createSelector(\n  getCustomersState,\n  customers => customers.error\n);\n","import { Customer } from '../models/customer.model';\n\nexport interface CustomersState {\n    customers: Customer[] | null;\n    isLoading: boolean;\n    error: any;\n}\n\nexport const customersInitialState: CustomersState = {\n    customers: null,\n    isLoading: true,\n    error: null\n};\n"],"sourceRoot":""}